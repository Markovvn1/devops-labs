name: app_python

on: 
  push:
    paths:
      - 'app_python/**'
      - '.github/workflows/app_python.yml'

defaults:
  run:
    working-directory: ./app_python

jobs:
  lint_and_test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python 3.9
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      - name: Install dependencies
        run: |
          python -V
          python -m venv .venv
          source .venv/bin/activate
          python -m pip install --upgrade pip
          python -m pip install poetry
          poetry install

      - name: Run linters
        run: make lint

      - name: Run tests
        run: make test

  snyk:
    runs-on: ubuntu-latest
    container: snyk/snyk:python-3.9
    steps:
      - uses: actions/checkout@v3

      - name: Run Snyk to check for vulnerabilities
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        run: snyk test --sarif-file-output=../snyk.sarif

      - name: Upload result to GitHub Code Scanning
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: snyk.sarif

  build_docker_image:
    runs-on: self-hosted
    needs: [lint_and_test, snyk]
    if: ${{ needs.lint_and_test.result == 'success' && needs.snyk.result == 'success' }}
    timeout-minutes: 90
    steps:
      - name: Checkout 
        uses: actions/checkout@v3

      #   Use tmpfs in order to build arm/v7 and linux/386 images in github runners
      #   https://github.com/JonasAlfredsson/docker-nginx-certbot/issues/109
      # - name: Run Docker on tmpfs
      #   uses: JonasAlfredsson/docker-on-tmpfs@v1
      #   with:
      #     tmpfs_size: 12

      - name: Set up QEMU        
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: ./app_python
          file: ./app_python/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/iu-devops:lab_python
          platforms: linux/amd64,linux/386,linux/arm64,linux/arm/v7
          cache-from: type=registry,ref=${{ secrets.DOCKER_HUB_USERNAME }}/iu-devops:lab_python_buildcache
          cache-to: type=registry,ref=${{ secrets.DOCKER_HUB_USERNAME }}/iu-devops:lab_python_buildcache,mode=max